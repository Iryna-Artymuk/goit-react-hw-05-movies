{"version":3,"file":"static/js/247.c067dddd.chunk.js","mappings":"uMAyCA,UAnCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WACJF,IACFG,EAAAA,EAAAA,IAAQH,GACLI,MAAK,YAAe,IAAZN,EAAW,EAAXA,KAEPC,EAAQD,EACT,IACAO,OAAM,SAAAC,GAEN,GAGN,GAAE,CAACN,IAEJ,OACE,+BACE,SAAC,IAAD,UACGF,EAAKS,KAAI,SAAAC,GAAK,OACb,SAAC,IAAD,WACE,4BACE,gBAAKC,IAPD,kCAOgBD,EAAME,aAAcC,IAAI,GAAGC,MAAO,OACtD,6BAAKJ,EAAMK,SACX,uCAAeL,EAAMM,iBAJdN,EAAMO,GADJ,OAYtB,C,uGCrCKC,EAAOC,EAAAA,EAAAA,GAAH,0IAOJC,EAAOD,EAAAA,EAAAA,GAAH,6pBAQK,WAEX,MAAO,WADK,GAAAE,KAAKC,SAAyB,IACjB,MAC1B,G,+LCdI,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,sBADlB,uBACGC,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCxB,GAAhC,yFACkBsB,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,oBADlB,uBACGuB,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAuBH,GAAvB,yFACkBsB,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,aADlB,uBACGuB,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0BzB,GAA1B,yFACkBsB,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,aADlB,uBACGuB,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAaC,GAAxC,yFACkBN,EAAAA,EAAAA,IAAA,8BACEK,EADF,iBACsBC,IAFxC,uBACGL,EADH,EACGA,KADH,kBAKEA,GALF,kEA5BPD,EAAAA,EAAAA,SAAAA,OAAwB,CACtBO,QAFU,oCAIZP,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/Cast/Cast.jsx","components/MoviesList/StyledMovie.jsx","components/Service/MovieApi.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { GetCast } from '../Service/MovieApi';\n\nimport { List, Card } from '../MoviesList/StyledMovie';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  //   const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (movieId) {\n      GetCast(movieId)\n        .then(({ cast }) => {\n          //   console.log(cast);\n          setCast(cast);\n        })\n        .catch(error => {\n          //   setError(error.message);\n        });\n    }\n    return;\n  }, [movieId]);\n  const Img_url = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <>\n      <List>\n        {cast.map(actor => (\n          <Card key={actor.id}>\n            <div>\n              <img src={Img_url + actor.profile_path} alt=\"\" width={100} />\n              <p> {actor.name}</p>\n              <p> character {actor.character}</p>\n            </div>\n          </Card>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nconst List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));\n  gap: 0rem;\n  padding: 1rem;\n`;\n\nconst Card = styled.li`\n  display: flex;\n  height: fit-content;\n  flex-direction: column;\n  padding: 1rem 1rem 2rem;\n  background: #f8f3e8;\n  box-shadow: 0 0 40px rgba(0, 0, 0, 0.2), 0 0 40px rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n  transform: ${() => {\n    const deg = Math.random() * (10 - -10) + -10;\n    return 'rotate(' + deg + 'deg)';\n  }};\n\n  img {\n    width: 100%;\n    height: 50%;\n    object-fit: cover;\n  }\n\n  h2 {\n    margin-top: 1rem;\n    font-family: 'Kalam', cursive;\n    font-weight: normal;\n    font-size: 2rem;\n    color: #4a4a7d;\n    text-align: center;\n  }\n  a {\n    width: 100%;\n    height: 100%;\n  }\n  p {\n    font-family: 'Kalam', cursive;\n    font-size: 1rem;\n    color: #5e5e89;\n    text-align: center;\n  }\n`;\n\nexport { List, Card };\n","import axios from 'axios';\nconst KEY = 'e55542ecb6aab3d889d16953eac82937';\naxios.defaults.params = {\n  api_key: KEY,\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport async function GetMovies() {\n  const { data } = await axios.get(`trending/movie/day`);\n\n  return data;\n}\n\nexport async function GetMoviesDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}?language=en-US`);\n  //   console.log(data);\n  return data;\n}\n\nexport async function GetCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n  return data;\n}\n\nexport async function GetReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n  return data;\n}\n\nexport async function searchMovie(searchValue, page) {\n  const { data } = await axios.get(\n    `/search/movie?query=${searchValue}&page=${page}`\n  );\n\n  return data;\n}\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","GetCast","then","catch","error","map","actor","src","profile_path","alt","width","name","character","id","List","styled","Card","Math","random","GetMovies","axios","data","GetMoviesDetails","GetReviews","searchMovie","searchValue","page","api_key"],"sourceRoot":""}