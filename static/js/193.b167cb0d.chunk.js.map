{"version":3,"file":"static/js/193.b167cb0d.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/SearchForm.jsx","Pages/Movie.jsx","components/MoviesList.jsx","components/Service/MovieApi.jsx"],"sourcesContent":["const Button = ({ SearchFormButton, LoadMore, children, onClick, type }) => {\n  return (\n    <button type={type} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useState } from 'react';\n\nimport { toast } from 'react-toastify';\n\nimport Button from '../components/Button/Button';\nconst SearchForm = ({ handelSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const updateinputValue = ({ target }) => {\n    setInputValue(target.value);\n  };\n  // по сабміту форми відправляєм значеня в компонент App\n  const handelFormSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue === '') {\n      return toast.error('empty value type something', {\n        theme: 'dark',\n      });\n    }\n\n    handelSubmit(inputValue);\n\n    // console.log(inputValue);\n    // setInputValue('');\n  };\n\n  return (\n    <form onSubmit={handelFormSubmit}>\n      <input\n        value={inputValue}\n        onChange={updateinputValue}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n      />\n      <Button type=\"submit\" SearchFormButton>\n        <span>Search</span>\n      </Button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MoviesList from '../components/MoviesList';\nimport { searchMovie } from '../components/Service/MovieApi';\n\nimport SearchForm from '../components/SearchForm';\nimport Button from '../components/Button/Button';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  //   const [searchValue, setSearchValue] = useState('');\n  const [page, setPage] = useState(1);\n  //   console.log(searchValue);\n  const [searchQuery, searchParams] = useSearchParams();\n  //   const query = searchQuery.get('searchQuery ') ?? '';\n\n  const handelSubmit = value => {\n    const nextQuery = value !== '' ? { searchQuery: value } : {};\n    // console.log(value);\n    searchParams(nextQuery);\n    setMovies([]);\n  };\n  //   useEffect(() => {\n  //     console.log(query);\n  //     searchMovie(query, page)\n  //       .then(data =>\n  //         setMovies(prevStateMovies => [...prevStateMovies, ...data.results])\n  //       )\n  //       .catch(error => setError(error.message));\n  //   }, [query, page, searchQuery]);\n\n  useEffect(() => {\n    if (searchQuery.get('searchQuery') === null) return;\n    const query = searchQuery.get('searchQuery') ?? '';\n    const getMovies = async () => {\n      try {\n        const moviesData = await searchMovie(query, page);\n        console.log(searchQuery);\n        setMovies(moviesData.results);\n      } catch (Error) {\n        setError(Error.message);\n      } finally {\n        // setLoading(false);\n      }\n    };\n    getMovies();\n  }, [page, searchQuery]);\n\n  const handelClick = () => setPage(page + 1);\n  return (\n    <>\n      <SearchForm handelSubmit={handelSubmit} />\n      {error && <p>Something went wrong Try again later.😭</p>}\n      {movies && (\n        <>\n          <MoviesList data={movies} />\n          <Button type=\"button\" onClick={handelClick}>\n            {' '}\n            Load More{' '}\n          </Button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ data }) => {\n  const location = useLocation();\n  // console.log(location);\n  return (\n    <div>\n      <ul\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          listStyle: 'none',\n        }}\n      >\n        {data.map(({ title, id }, index) => (\n          <li key={index}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","// api_key: 'e55542ecb6aab3d889d16953eac82937'\nimport axios from 'axios';\nconst KEY = 'e55542ecb6aab3d889d16953eac82937';\naxios.defaults.params = {\n  api_key: KEY,\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport async function GetMovies() {\n  const { data } = await axios.get(`trending/movie/day`);\n\n  return data;\n}\n\nexport async function GetMoviesDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}?language=en-US`);\n  //   console.log(data);\n  return data;\n}\n\nexport async function GetCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n  return data;\n}\n\nexport async function GetReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n  return data;\n}\n\nexport async function searchMovie(searchValue, page) {\n  const { data } = await axios.get(\n    `/search/movie?query=${searchValue}&page=${page}`\n  );\n\n  return data;\n}\n"],"names":["SearchFormButton","LoadMore","children","onClick","type","handelSubmit","useState","inputValue","setInputValue","onSubmit","event","preventDefault","toast","theme","value","onChange","target","autoComplete","autoFocus","placeholder","movies","setMovies","error","setError","page","setPage","useSearchParams","searchQuery","searchParams","useEffect","get","query","getMovies","searchMovie","moviesData","console","log","results","message","MoviesList","data","location","useLocation","style","display","flexDirection","listStyle","map","index","title","id","to","state","from","GetMovies","axios","GetMoviesDetails","movieId","GetCast","GetReviews","searchValue","api_key"],"sourceRoot":""}