{"version":3,"file":"static/js/106.3dd1e76c.chunk.js","mappings":"sMA8DA,UAzDqB,WAAO,IAAD,IACzB,GAAkCA,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,IAAMI,EAAY,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAG7CJ,QAAQC,IAAIH,EAASK,QACrBE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBV,GACdW,MAAK,SAAAC,GACJR,QAAQC,IAAI,aAEZR,EAAae,EAEd,IACAC,OAAM,SAAAf,GACLC,EAASD,EAAMgB,SACfV,QAAQC,IAAIP,EAAMgB,QACnB,GACJ,GAAE,CAACd,EAASH,IAIb,OACE,gCACGC,IAAS,8EAERA,IACA,iCACE,SAAC,KAAD,CAAMiB,GAAIT,EAAV,wBACA,6CAAqBN,MACrB,gBAAKgB,IAVG,kCAUYpB,EAAUqB,YAAaC,IAAI,GAAGC,MAAO,OACzD,2BACE,yBACE,SAAC,KAAD,CAAMJ,GAAG,OAAOR,MAAO,CAAEC,KAAMF,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMS,GAAG,UAAUR,MAAO,CAAEC,KAAMF,GAAlC,2BAMJ,SAAC,EAAAc,SAAD,CAAUC,UAAU,yCAApB,UACE,SAAC,KAAD,WAMX,C,+LCrDM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,sBADlB,uBACGC,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAAgCV,GAAhC,yFACkBuB,EAAAA,EAAAA,IAAA,iBAAoBvB,EAApB,oBADlB,uBACGwB,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuBzB,GAAvB,yFACkBuB,EAAAA,EAAAA,IAAA,iBAAoBvB,EAApB,aADlB,uBACGwB,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0B1B,GAA1B,yFACkBuB,EAAAA,EAAAA,IAAA,iBAAoBvB,EAApB,aADlB,uBACGwB,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAaC,GAAxC,yFACkBN,EAAAA,EAAAA,IAAA,8BACEK,EADF,iBACsBC,IAFxC,uBACGL,EADH,EACGA,KADH,kBAKEA,GALF,kEA5BPD,EAAAA,EAAAA,SAAAA,OAAwB,CACtBO,QAFU,oCAIZP,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/MovieDetails.jsx","components/Service/MovieApi.jsx"],"sourcesContent":["import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\n\nimport { GetMoviesDetails } from './Service/MovieApi';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const backLinkHref = location.state?.from ?? '/movies';\n  //  const backLinkHref =  useRef (location.state?.from ?? '/movies')\n  // than use  backLinkHref.current to get location object\n  console.log(location.state);\n  useEffect(() => {\n    GetMoviesDetails(movieId)\n      .then(moviesData => {\n        console.log('use efect');\n\n        setMovieInfo(moviesData);\n        // console.log(moviesData.StatusCode);\n      })\n      .catch(error => {\n        setError(error.message);\n        console.log(error.message);\n      });\n  }, [movieId, setMovieInfo]);\n\n  const Img_url = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <>\n      {error && <p>Something went wrong Try again later.ðŸ˜­</p>}\n\n      {!error && (\n        <>\n          <Link to={backLinkHref}> Go Back </Link>\n          <h1> Movie Details: {movieId}</h1>\n          <img src={Img_url + movieInfo.poster_path} alt=\"\" width={200} />\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n\n          <Suspense fallback={<div>Loading2...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","// api_key: 'e55542ecb6aab3d889d16953eac82937'\nimport axios from 'axios';\nconst KEY = 'e55542ecb6aab3d889d16953eac82937';\naxios.defaults.params = {\n  api_key: KEY,\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport async function GetMovies() {\n  const { data } = await axios.get(`trending/movie/day`);\n\n  return data;\n}\n\nexport async function GetMoviesDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}?language=en-US`);\n  //   console.log(data);\n  return data;\n}\n\nexport async function GetCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n  return data;\n}\n\nexport async function GetReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n  return data;\n}\n\nexport async function searchMovie(searchValue, page) {\n  const { data } = await axios.get(\n    `/search/movie?query=${searchValue}&page=${page}`\n  );\n\n  return data;\n}\n"],"names":["useState","movieInfo","setMovieInfo","error","setError","movieId","useParams","location","useLocation","console","log","backLinkHref","state","from","useEffect","GetMoviesDetails","then","moviesData","catch","message","to","src","poster_path","alt","width","Suspense","fallback","GetMovies","axios","data","GetCast","GetReviews","searchMovie","searchValue","page","api_key"],"sourceRoot":""}